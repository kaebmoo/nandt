"""Re-initial migration with timezone support and correct defaults

Revision ID: 42059aa8e95e
Revises: 
Create Date: 2025-07-10 21:32:42.843086

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '42059aa8e95e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('contact_email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('teamup_calendar_id', sa.String(length=255), nullable=True),
    sa.Column('subscription_plan', sa.Enum('FREE', 'BASIC', 'PREMIUM', name='subscriptionplan'), nullable=True),
    sa.Column('subscription_status', sa.Enum('ACTIVE', 'SUSPENDED', 'CANCELLED', 'TRIAL', name='subscriptionstatus'), nullable=True),
    sa.Column('subscription_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('trial_ends_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('max_appointments_per_month', sa.Integer(), nullable=True),
    sa.Column('max_staff_users', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('organizations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_organizations_contact_email'), ['contact_email'], unique=False)
        batch_op.create_index(batch_op.f('ix_organizations_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_organizations_is_deleted'), ['is_deleted'], unique=False)
        batch_op.create_index(batch_op.f('ix_organizations_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_organizations_subscription_expires_at'), ['subscription_expires_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_organizations_subscription_plan'), ['subscription_plan'], unique=False)
        batch_op.create_index(batch_op.f('ix_organizations_subscription_status'), ['subscription_status'], unique=False)
        batch_op.create_index(batch_op.f('ix_organizations_teamup_calendar_id'), ['teamup_calendar_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_organizations_trial_ends_at'), ['trial_ends_at'], unique=False)

    op.create_table('subscriptions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('organization_id', sa.String(length=36), nullable=False),
    sa.Column('plan_type', sa.Enum('FREE', 'BASIC', 'PREMIUM', name='subscriptionplan'), nullable=False),
    sa.Column('billing_cycle', sa.String(length=10), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_payment_method_id', sa.String(length=255), nullable=True),
    sa.Column('current_period_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('current_period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('next_billing_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'SUSPENDED', 'CANCELLED', 'TRIAL', name='subscriptionstatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teamup_calendars',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('organization_id', sa.String(length=36), nullable=False),
    sa.Column('calendar_id', sa.String(length=255), nullable=False),
    sa.Column('calendar_name', sa.String(length=255), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('subcalendar_count', sa.Integer(), nullable=True),
    sa.Column('max_subcalendars', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('calendar_id')
    )
    op.create_table('usage_stats',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('organization_id', sa.String(length=36), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('appointments_created', sa.Integer(), nullable=True),
    sa.Column('appointments_updated', sa.Integer(), nullable=True),
    sa.Column('staff_active', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'date', name='unique_org_date')
    )
    with op.batch_alter_table('usage_stats', schema=None) as batch_op:
        batch_op.create_index('idx_usage_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index(batch_op.f('ix_usage_stats_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_usage_stats_organization_id'), ['organization_id'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('organization_id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'STAFF', name='userrole'), nullable=True),
    sa.Column('two_factor_enabled', sa.Boolean(), nullable=True),
    sa.Column('two_factor_secret', sa.String(length=32), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reset_token', sa.String(length=100), nullable=True),
    sa.Column('reset_token_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('idx_user_email_active', ['email', 'is_active'], unique=False)
        batch_op.create_index('idx_user_org_active', ['organization_id', 'is_active'], unique=False)
        batch_op.create_index('idx_user_org_role', ['organization_id', 'role'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_is_deleted'), ['is_deleted'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_last_login'), ['last_login'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_reset_token'), ['reset_token'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_role'), ['role'], unique=False)

    op.create_table('audit_logs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('organization_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('resource_id', sa.String(length=255), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.create_index('idx_audit_created', ['created_at'], unique=False)
        batch_op.create_index('idx_audit_org_action', ['organization_id', 'action'], unique=False)
        batch_op.create_index('idx_audit_org_resource', ['organization_id', 'resource_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_resource_id'), ['resource_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_resource_type'), ['resource_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_user_id'), ['user_id'], unique=False)

    op.create_table('organization_subcalendars',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('organization_id', sa.String(length=36), nullable=False),
    sa.Column('calendar_id', sa.String(length=255), nullable=False),
    sa.Column('subcalendar_id', sa.Integer(), nullable=False),
    sa.Column('subcalendar_name', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['calendar_id'], ['teamup_calendars.calendar_id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('calendar_id', 'subcalendar_id'),
    sa.UniqueConstraint('organization_id', 'subcalendar_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('organization_subcalendars')
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_audit_logs_user_id'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_resource_type'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_resource_id'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_organization_id'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_created_at'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_action'))
        batch_op.drop_index('idx_audit_org_resource')
        batch_op.drop_index('idx_audit_org_action')
        batch_op.drop_index('idx_audit_created')

    op.drop_table('audit_logs')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_role'))
        batch_op.drop_index(batch_op.f('ix_users_reset_token'))
        batch_op.drop_index(batch_op.f('ix_users_organization_id'))
        batch_op.drop_index(batch_op.f('ix_users_last_login'))
        batch_op.drop_index(batch_op.f('ix_users_is_deleted'))
        batch_op.drop_index(batch_op.f('ix_users_is_active'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index(batch_op.f('ix_users_created_at'))
        batch_op.drop_index('idx_user_org_role')
        batch_op.drop_index('idx_user_org_active')
        batch_op.drop_index('idx_user_email_active')

    op.drop_table('users')
    with op.batch_alter_table('usage_stats', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_usage_stats_organization_id'))
        batch_op.drop_index(batch_op.f('ix_usage_stats_date'))
        batch_op.drop_index('idx_usage_org_date')

    op.drop_table('usage_stats')
    op.drop_table('teamup_calendars')
    op.drop_table('subscriptions')
    with op.batch_alter_table('organizations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_organizations_trial_ends_at'))
        batch_op.drop_index(batch_op.f('ix_organizations_teamup_calendar_id'))
        batch_op.drop_index(batch_op.f('ix_organizations_subscription_status'))
        batch_op.drop_index(batch_op.f('ix_organizations_subscription_plan'))
        batch_op.drop_index(batch_op.f('ix_organizations_subscription_expires_at'))
        batch_op.drop_index(batch_op.f('ix_organizations_name'))
        batch_op.drop_index(batch_op.f('ix_organizations_is_deleted'))
        batch_op.drop_index(batch_op.f('ix_organizations_created_at'))
        batch_op.drop_index(batch_op.f('ix_organizations_contact_email'))

    op.drop_table('organizations')
    # ### end Alembic commands ###
